name: Cargo Build & Test

on:
  push:
    branches: [main]
  pull_request:

env:
  CARGO_TERM_COLOR: always

# When a new job is pushed on a PR, cancel the old one.
concurrency:
  group: >
    ${{ github.event_name == 'pull_request'
        && format('pr-{0}', github.event.pull_request.number)
        || format('push-{0}', github.ref) }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        toolchain:
          - nightly-2025-04-05
    steps:
      - uses: actions/checkout@v4
      - name: Setup rust toolchain, cache and bins
        uses: moonrepo/setup-rust@v1
        with:
          channel: nightly
          cache-base: main
          components: rustfmt, clippy
      - run: cargo fmt --all --check
      - run: cargo clippy --all-targets --all-features --verbose
      - run: cargo build --all-targets --all-features --verbose
      - uses: noir-lang/noirup@v0.1.2
        with:
          toolchain: nightly-2025-05-28
      - run: cargo test --no-fail-fast --all-targets --all-features --verbose
      - run: cargo test --doc --all-features --verbose
      - run: cargo doc --workspace --all-features --no-deps --document-private-items
        env:
          RUSTDOCFLAGS: "--cfg doc_cfg -D warnings"

  benchmark:
    name: Benchmark on Raspberry Pi 5
    runs-on: [self-hosted, rpi5]
    env:
      DIVAN_MAX_TIME: 30
      CODSPEED_RUNNER_MODE: walltime
    steps:
      - uses: actions/checkout@v4
      - name: Setup rust toolchain, cache and cargo-codspeed binary
        uses: moonrepo/setup-rust@v1
        with:
          channel: nightly
          cache-base: main
          cache-target: release
          bins: cargo-codspeed
      - name: Build the benchmark target(s)
        run: cargo codspeed build
      - name: Run the benchmarks
        uses: CodSpeedHQ/action@v3
        with:
          run: cargo codspeed run
          token: ${{ secrets.CODSPEED_TOKEN }}
